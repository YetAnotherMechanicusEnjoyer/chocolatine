name: chocolatine
run-name: ${{ github.actor }} checker
on: 
  push:
    branches-ignore:
      - " ga-ignore-"
  pull_request:
    branches-ignore:
      - " ga-ignore-"

env:
  MIRROR_URL: git@github.com:EpitechPGEPromo2029/B-DOP-200-BDX-2-1-chocolatine-ahmed.al-rawi.git
  EXECUTABLES: "chocolatine"

jobs:
  coding-style-checker:
    runs-on: ubuntu-latest
    container: ghcr.io/epitech/coding-style-checker:latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
        with:
          repository: ''

      - name: Coding Style
        run: check.sh . /tmp

      - name: Coding style error
        run: |
          input=/tmp/coding-style-reports.log
          while IFS= read -r line; do
            file=$(echo "$line" | cut -d':' -f1)
            n_line=$(echo "$line" | cut -d':' -f2)
            title=$(echo "$line" | cut -d':' -f3)
            err=$(echo "$line" | cut -d':' -f4-)
            echo "::error title=${title} coding style error,file=${file},line=${n_line}::${err}"
          done < $input

      - name: Report Results
        run: |
          NBE=$(cat /tmp/coding-style-reports.log | wc -l)
          if [ $NBE -gt 0 ]; then
            exit 1
          fi

  compilation_checker:
    runs-on: ubuntu-latest
    timeout-minutes: 2
    container: epitechcontent/epitest-docker:latest
    needs: coding-style-checker
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
        with:
          repository: ''

      - name: Compile Repo
        run: make

      - name: Clean Repo
        run: make clean

      - name: Check Compilation
        run: |
          for file in ${{ env.EXECUTABLES }}; do
            if [ ! -x "$file" ]; then
              echo "File $file does not exist or is not executable"
              exit 1
            fi
          done

  run_tests:
    runs-on: ubuntu-latest
    timeout-minutes: 2
    container: epitechcontent/epitest-docker:latest
    needs: compilation_checker
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
        with:
          repository: ''

      - name: Compile Tests
        run: make run_tests

  mirror_checker:
    runs-on: ubuntu-latest
    needs: run_tests
    if: github.event_name == 'push'
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: pixta-dev/repository-mirroring-action@v1
        with:
          target_repo_url: ${{ env.MIRROR_URL }}
          ssh_private_key: ${{ secrets.GIT_SSH_PRIVATE_KEY }}
